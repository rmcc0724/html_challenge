{"changed":true,"filter":false,"title":"Untitled1","tooltip":"/Untitled1","value":"// BUDGET CONTROLLER\nvar budgetController = (function() {\n    \n    var Expense = function(id, description, value) {\n        this.id = id;\n        this.description = description;\n        this.value = value;\n        this.percentage = -1;\n    };\n    \n    \n    Expense.prototype.calcPercentage = function(totalIncome) {\n        if (totalIncome > 0) {\n            this.percentage = Math.round((this.value / totalIncome) * 100);\n        } else {\n            this.percentage = -1;\n        }\n    };\n    \n    \n    Expense.prototype.getPercentage = function() {\n        return this.percentage;\n    };\n    \n    \n    var Income = function(id, description, value) {\n        this.id = id;\n        this.description = description;\n        this.value = value;\n    };\n    \n    \n    var calculateTotal = function(type) {\n        var sum = 0;\n        data.allItems[type].forEach(function(cur) {\n            sum += cur.value;\n        });\n        data.totals[type] = sum;\n    };\n    \n    \n    var data = {\n        allItems: {\n            exp: [],\n            inc: []\n        },\n        totals: {\n            exp: 0,\n            inc: 0\n        },\n        budget: 0,\n        percentage: -1\n    };\n    \n    \n    return {\n        addItem: function(type, des, val) {\n            var newItem, ID;\n            \n            //[1 2 3 4 5], next ID = 6\n            //[1 2 4 6 8], next ID = 9\n            // ID = last ID + 1\n            \n            // Create new ID\n            if (data.allItems[type].length > 0) {\n                ID = data.allItems[type][data.allItems[type].length - 1].id + 1;\n            } else {\n                ID = 0;\n            }\n            \n            // Create new item based on 'inc' or 'exp' type\n            if (type === 'exp') {\n                newItem = new Expense(ID, des, val);\n            } else if (type === 'inc') {\n                newItem = new Income(ID, des, val);\n            }\n            \n            // Push it into our data structure\n            data.allItems[type].push(newItem);\n            \n            // Return the new element\n            return newItem;\n        },\n        \n        \n        deleteItem: function(type, id) {\n            var ids, index;\n            \n            // id = 6\n            //data.allItems[type][id];\n            // ids = [1 2 4  8]\n            //index = 3\n            \n            ids = data.allItems[type].map(function(current) {\n                return current.id;\n            });\n\n            index = ids.indexOf(id);\n\n            if (index !== -1) {\n                data.allItems[type].splice(index, 1);\n            }\n            \n        },\n        \n        \n        calculateBudget: function() {\n            \n            // calculate total income and expenses\n            calculateTotal('exp');\n            calculateTotal('inc');\n            \n            // Calculate the budget: income - expenses\n            data.budget = data.totals.inc - data.totals.exp;\n            \n            // calculate the percentage of income that we spent\n            if (data.totals.inc > 0) {\n                data.percentage = Math.round((data.totals.exp / data.totals.inc) * 100);\n            } else {\n                data.percentage = -1;\n            }            \n            \n            // Expense = 100 and income 300, spent 33.333% = 100/300 = 0.3333 * 100\n        },\n        \n        calculatePercentages: function() {\n            \n            /*\n            a=20\n            b=10\n            c=40\n            income = 100\n            a=20/100=20%\n            b=10/100=10%\n            c=40/100=40%\n            */\n            \n            data.allItems.exp.forEach(function(cur) {\n               cur.calcPercentage(data.totals.inc);\n            });\n        },\n        \n        \n        getPercentages: function() {\n            var allPerc = data.allItems.exp.map(function(cur) {\n                return cur.getPercentage();\n            });\n            return allPerc;\n        },\n        \n        \n        getBudget: function() {\n            return {\n                budget: data.budget,\n                totalInc: data.totals.inc,\n                totalExp: data.totals.exp,\n                percentage: data.percentage\n            };\n        },\n        \n        testing: function() {\n            console.log(data);\n        }\n    };\n    \n})();\n\n\n\n\n// UI CONTROLLER\nvar UIController = (function() {\n    \n    var DOMstrings = {\n        inputType: '.add__type',\n        inputDescription: '.add__description',\n        inputValue: '.add__value',\n        inputBtn: '.add__btn',\n        incomeContainer: '.income__list',\n        expensesContainer: '.expenses__list',\n        budgetLabel: '.budget__value',\n        incomeLabel: '.budget__income--value',\n        expensesLabel: '.budget__expenses--value',\n        percentageLabel: '.budget__expenses--percentage',\n        container: '.container',\n        expensesPercLabel: '.item__percentage',\n        dateLabel: '.budget__title--month'\n    };\n    \n    \n    var formatNumber = function(num, type) {\n        var numSplit, int, dec, type;\n        /*\n            + or - before number\n            exactly 2 decimal points\n            comma separating the thousands\n\n            2310.4567 -> + 2,310.46\n            2000 -> + 2,000.00\n            */\n\n        num = Math.abs(num);\n        num = num.toFixed(2);\n\n        numSplit = num.split('.');\n\n        int = numSplit[0];\n        if (int.length > 3) {\n            int = int.substr(0, int.length - 3) + ',' + int.substr(int.length - 3, 3); //input 23510, output 23,510\n        }\n\n        dec = numSplit[1];\n\n        return (type === 'exp' ? '-' : '+') + ' ' + int + '.' + dec;\n\n    };\n    \n    \n    var nodeListForEach = function(list, callback) {\n        for (var i = 0; i < list.length; i++) {\n            callback(list[i], i);\n        }\n    };\n    \n    \n    return {\n        getInput: function() {\n            return {\n                type: document.querySelector(DOMstrings.inputType).value, // Will be either inc or exp\n                description: document.querySelector(DOMstrings.inputDescription).value,\n                value: parseFloat(document.querySelector(DOMstrings.inputValue).value)\n            };\n        },\n        \n        \n        addListItem: function(obj, type) {\n            var html, newHtml, element;\n            // Create HTML string with placeholder text\n            \n            if (type === 'inc') {\n                element = DOMstrings.incomeContainer;\n                \n                html = '<div class=\"item clearfix\" id=\"inc-%id%\"> <div class=\"item__description\">%description%</div><div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\n            } else if (type === 'exp') {\n                element = DOMstrings.expensesContainer;\n                \n                html = '<div class=\"item clearfix\" id=\"exp-%id%\"><div class=\"item__description\">%description%</div><div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__percentage\">21%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\n            }\n            \n            // Replace the placeholder text with some actual data\n            newHtml = html.replace('%id%', obj.id);\n            newHtml = newHtml.replace('%description%', obj.description);\n            newHtml = newHtml.replace('%value%', formatNumber(obj.value, type));\n            \n            // Insert the HTML into the DOM\n            document.querySelector(element).insertAdjacentHTML('beforeend', newHtml);\n        },\n        \n        \n        deleteListItem: function(selectorID) {\n            \n            var el = document.getElementById(selectorID);\n            el.parentNode.removeChild(el);\n            \n        },\n        \n        \n        clearFields: function() {\n            var fields, fieldsArr;\n            \n            fields = document.querySelectorAll(DOMstrings.inputDescription + ', ' + DOMstrings.inputValue);\n            \n            fieldsArr = Array.prototype.slice.call(fields);\n            \n            fieldsArr.forEach(function(current, index, array) {\n                current.value = \"\";\n            });\n            \n            fieldsArr[0].focus();\n        },\n        \n        \n        displayBudget: function(obj) {\n            var type;\n            obj.budget > 0 ? type = 'inc' : type = 'exp';\n            \n            document.querySelector(DOMstrings.budgetLabel).textContent = formatNumber(obj.budget, type);\n            document.querySelector(DOMstrings.incomeLabel).textContent = formatNumber(obj.totalInc, 'inc');\n            document.querySelector(DOMstrings.expensesLabel).textContent = formatNumber(obj.totalExp, 'exp');\n            \n            if (obj.percentage > 0) {\n                document.querySelector(DOMstrings.percentageLabel).textContent = obj.percentage + '%';\n            } else {\n                document.querySelector(DOMstrings.percentageLabel).textContent = '---';\n            }\n            \n        },\n        \n        \n        displayPercentages: function(percentages) {\n            \n            var fields = document.querySelectorAll(DOMstrings.expensesPercLabel);\n            \n            nodeListForEach(fields, function(current, index) {\n                \n                if (percentages[index] > 0) {\n                    current.textContent = percentages[index] + '%';\n                } else {\n                    current.textContent = '---';\n                }\n            });\n            \n        },\n        \n        \n        displayMonth: function() {\n            var now, months, month, year;\n            \n            now = new Date();\n            //var christmas = new Date(2016, 11, 25);\n            \n            months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n            month = now.getMonth();\n            \n            year = now.getFullYear();\n            document.querySelector(DOMstrings.dateLabel).textContent = months[month] + ' ' + year;\n        },\n        \n        \n        changedType: function() {\n            \n            var fields = document.querySelectorAll(\n                DOMstrings.inputType + ',' +\n                DOMstrings.inputDescription + ',' +\n                DOMstrings.inputValue);\n            \n            nodeListForEach(fields, function(cur) {\n               cur.classList.toggle('red-focus'); \n            });\n            \n            document.querySelector(DOMstrings.inputBtn).classList.toggle('red');\n            \n        },\n        \n        \n        getDOMstrings: function() {\n            return DOMstrings;\n        }\n    };\n    \n})();\n\n\n\n\n// GLOBAL APP CONTROLLER\nvar controller = (function(budgetCtrl, UICtrl) {\n    \n    var setupEventListeners = function() {\n        var DOM = UICtrl.getDOMstrings();\n        \n        document.querySelector(DOM.inputBtn).addEventListener('click', ctrlAddItem);\n\n        document.addEventListener('keypress', function(event) {\n            if (event.keyCode === 13 || event.which === 13) {\n                ctrlAddItem();\n            }\n        });\n        \n        document.querySelector(DOM.container).addEventListener('click', ctrlDeleteItem);\n        \n        document.querySelector(DOM.inputType).addEventListener('change', UICtrl.changedType);        \n    };\n    \n    \n    var updateBudget = function() {\n        \n        // 1. Calculate the budget\n        budgetCtrl.calculateBudget();\n        \n        // 2. Return the budget\n        var budget = budgetCtrl.getBudget();\n        \n        // 3. Display the budget on the UI\n        UICtrl.displayBudget(budget);\n    };\n    \n    \n    var updatePercentages = function() {\n        \n        // 1. Calculate percentages\n        budgetCtrl.calculatePercentages();\n        \n        // 2. Read percentages from the budget controller\n        var percentages = budgetCtrl.getPercentages();\n        \n        // 3. Update the UI with the new percentages\n        UICtrl.displayPercentages(percentages);\n    };\n    \n    \n    var ctrlAddItem = function() {\n        var input, newItem;\n        \n        // 1. Get the field input data\n        input = UICtrl.getInput();        \n        \n        if (input.description !== \"\" && !isNaN(input.value) && input.value > 0) {\n            // 2. Add the item to the budget controller\n            newItem = budgetCtrl.addItem(input.type, input.description, input.value);\n\n            // 3. Add the item to the UI\n            UICtrl.addListItem(newItem, input.type);\n\n            // 4. Clear the fields\n            UICtrl.clearFields();\n\n            // 5. Calculate and update budget\n            updateBudget();\n            \n            // 6. Calculate and update percentages\n            updatePercentages();\n        }\n    };\n    \n    \n    var ctrlDeleteItem = function(event) {\n        var itemID, splitID, type, ID;\n        \n        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;\n        \n        if (itemID) {\n            \n            //inc-1\n            splitID = itemID.split('-');\n            type = splitID[0];\n            ID = parseInt(splitID[1]);\n            \n            // 1. delete the item from the data structure\n            budgetCtrl.deleteItem(type, ID);\n            \n            // 2. Delete the item from the UI\n            UICtrl.deleteListItem(itemID);\n            \n            // 3. Update and show the new budget\n            updateBudget();\n            \n            // 4. Calculate and update percentages\n            updatePercentages();\n        }\n    };\n    \n    \n    return {\n        init: function() {\n            console.log('Application has started.');\n            UICtrl.displayMonth();\n            UICtrl.displayBudget({\n                budget: 0,\n                totalInc: 0,\n                totalExp: 0,\n                percentage: -1\n            });\n            setupEventListeners();\n        }\n    };\n    \n})(budgetController, UIController);\n\n\ncontroller.init();\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":471,"column":0},"action":"insert","lines":["// BUDGET CONTROLLER","var budgetController = (function() {","    ","    var Expense = function(id, description, value) {","        this.id = id;","        this.description = description;","        this.value = value;","        this.percentage = -1;","    };","    ","    ","    Expense.prototype.calcPercentage = function(totalIncome) {","        if (totalIncome > 0) {","            this.percentage = Math.round((this.value / totalIncome) * 100);","        } else {","            this.percentage = -1;","        }","    };","    ","    ","    Expense.prototype.getPercentage = function() {","        return this.percentage;","    };","    ","    ","    var Income = function(id, description, value) {","        this.id = id;","        this.description = description;","        this.value = value;","    };","    ","    ","    var calculateTotal = function(type) {","        var sum = 0;","        data.allItems[type].forEach(function(cur) {","            sum += cur.value;","        });","        data.totals[type] = sum;","    };","    ","    ","    var data = {","        allItems: {","            exp: [],","            inc: []","        },","        totals: {","            exp: 0,","            inc: 0","        },","        budget: 0,","        percentage: -1","    };","    ","    ","    return {","        addItem: function(type, des, val) {","            var newItem, ID;","            ","            //[1 2 3 4 5], next ID = 6","            //[1 2 4 6 8], next ID = 9","            // ID = last ID + 1","            ","            // Create new ID","            if (data.allItems[type].length > 0) {","                ID = data.allItems[type][data.allItems[type].length - 1].id + 1;","            } else {","                ID = 0;","            }","            ","            // Create new item based on 'inc' or 'exp' type","            if (type === 'exp') {","                newItem = new Expense(ID, des, val);","            } else if (type === 'inc') {","                newItem = new Income(ID, des, val);","            }","            ","            // Push it into our data structure","            data.allItems[type].push(newItem);","            ","            // Return the new element","            return newItem;","        },","        ","        ","        deleteItem: function(type, id) {","            var ids, index;","            ","            // id = 6","            //data.allItems[type][id];","            // ids = [1 2 4  8]","            //index = 3","            ","            ids = data.allItems[type].map(function(current) {","                return current.id;","            });","","            index = ids.indexOf(id);","","            if (index !== -1) {","                data.allItems[type].splice(index, 1);","            }","            ","        },","        ","        ","        calculateBudget: function() {","            ","            // calculate total income and expenses","            calculateTotal('exp');","            calculateTotal('inc');","            ","            // Calculate the budget: income - expenses","            data.budget = data.totals.inc - data.totals.exp;","            ","            // calculate the percentage of income that we spent","            if (data.totals.inc > 0) {","                data.percentage = Math.round((data.totals.exp / data.totals.inc) * 100);","            } else {","                data.percentage = -1;","            }            ","            ","            // Expense = 100 and income 300, spent 33.333% = 100/300 = 0.3333 * 100","        },","        ","        calculatePercentages: function() {","            ","            /*","            a=20","            b=10","            c=40","            income = 100","            a=20/100=20%","            b=10/100=10%","            c=40/100=40%","            */","            ","            data.allItems.exp.forEach(function(cur) {","               cur.calcPercentage(data.totals.inc);","            });","        },","        ","        ","        getPercentages: function() {","            var allPerc = data.allItems.exp.map(function(cur) {","                return cur.getPercentage();","            });","            return allPerc;","        },","        ","        ","        getBudget: function() {","            return {","                budget: data.budget,","                totalInc: data.totals.inc,","                totalExp: data.totals.exp,","                percentage: data.percentage","            };","        },","        ","        testing: function() {","            console.log(data);","        }","    };","    ","})();","","","","","// UI CONTROLLER","var UIController = (function() {","    ","    var DOMstrings = {","        inputType: '.add__type',","        inputDescription: '.add__description',","        inputValue: '.add__value',","        inputBtn: '.add__btn',","        incomeContainer: '.income__list',","        expensesContainer: '.expenses__list',","        budgetLabel: '.budget__value',","        incomeLabel: '.budget__income--value',","        expensesLabel: '.budget__expenses--value',","        percentageLabel: '.budget__expenses--percentage',","        container: '.container',","        expensesPercLabel: '.item__percentage',","        dateLabel: '.budget__title--month'","    };","    ","    ","    var formatNumber = function(num, type) {","        var numSplit, int, dec, type;","        /*","            + or - before number","            exactly 2 decimal points","            comma separating the thousands","","            2310.4567 -> + 2,310.46","            2000 -> + 2,000.00","            */","","        num = Math.abs(num);","        num = num.toFixed(2);","","        numSplit = num.split('.');","","        int = numSplit[0];","        if (int.length > 3) {","            int = int.substr(0, int.length - 3) + ',' + int.substr(int.length - 3, 3); //input 23510, output 23,510","        }","","        dec = numSplit[1];","","        return (type === 'exp' ? '-' : '+') + ' ' + int + '.' + dec;","","    };","    ","    ","    var nodeListForEach = function(list, callback) {","        for (var i = 0; i < list.length; i++) {","            callback(list[i], i);","        }","    };","    ","    ","    return {","        getInput: function() {","            return {","                type: document.querySelector(DOMstrings.inputType).value, // Will be either inc or exp","                description: document.querySelector(DOMstrings.inputDescription).value,","                value: parseFloat(document.querySelector(DOMstrings.inputValue).value)","            };","        },","        ","        ","        addListItem: function(obj, type) {","            var html, newHtml, element;","            // Create HTML string with placeholder text","            ","            if (type === 'inc') {","                element = DOMstrings.incomeContainer;","                ","                html = '<div class=\"item clearfix\" id=\"inc-%id%\"> <div class=\"item__description\">%description%</div><div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';","            } else if (type === 'exp') {","                element = DOMstrings.expensesContainer;","                ","                html = '<div class=\"item clearfix\" id=\"exp-%id%\"><div class=\"item__description\">%description%</div><div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__percentage\">21%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';","            }","            ","            // Replace the placeholder text with some actual data","            newHtml = html.replace('%id%', obj.id);","            newHtml = newHtml.replace('%description%', obj.description);","            newHtml = newHtml.replace('%value%', formatNumber(obj.value, type));","            ","            // Insert the HTML into the DOM","            document.querySelector(element).insertAdjacentHTML('beforeend', newHtml);","        },","        ","        ","        deleteListItem: function(selectorID) {","            ","            var el = document.getElementById(selectorID);","            el.parentNode.removeChild(el);","            ","        },","        ","        ","        clearFields: function() {","            var fields, fieldsArr;","            ","            fields = document.querySelectorAll(DOMstrings.inputDescription + ', ' + DOMstrings.inputValue);","            ","            fieldsArr = Array.prototype.slice.call(fields);","            ","            fieldsArr.forEach(function(current, index, array) {","                current.value = \"\";","            });","            ","            fieldsArr[0].focus();","        },","        ","        ","        displayBudget: function(obj) {","            var type;","            obj.budget > 0 ? type = 'inc' : type = 'exp';","            ","            document.querySelector(DOMstrings.budgetLabel).textContent = formatNumber(obj.budget, type);","            document.querySelector(DOMstrings.incomeLabel).textContent = formatNumber(obj.totalInc, 'inc');","            document.querySelector(DOMstrings.expensesLabel).textContent = formatNumber(obj.totalExp, 'exp');","            ","            if (obj.percentage > 0) {","                document.querySelector(DOMstrings.percentageLabel).textContent = obj.percentage + '%';","            } else {","                document.querySelector(DOMstrings.percentageLabel).textContent = '---';","            }","            ","        },","        ","        ","        displayPercentages: function(percentages) {","            ","            var fields = document.querySelectorAll(DOMstrings.expensesPercLabel);","            ","            nodeListForEach(fields, function(current, index) {","                ","                if (percentages[index] > 0) {","                    current.textContent = percentages[index] + '%';","                } else {","                    current.textContent = '---';","                }","            });","            ","        },","        ","        ","        displayMonth: function() {","            var now, months, month, year;","            ","            now = new Date();","            //var christmas = new Date(2016, 11, 25);","            ","            months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];","            month = now.getMonth();","            ","            year = now.getFullYear();","            document.querySelector(DOMstrings.dateLabel).textContent = months[month] + ' ' + year;","        },","        ","        ","        changedType: function() {","            ","            var fields = document.querySelectorAll(","                DOMstrings.inputType + ',' +","                DOMstrings.inputDescription + ',' +","                DOMstrings.inputValue);","            ","            nodeListForEach(fields, function(cur) {","               cur.classList.toggle('red-focus'); ","            });","            ","            document.querySelector(DOMstrings.inputBtn).classList.toggle('red');","            ","        },","        ","        ","        getDOMstrings: function() {","            return DOMstrings;","        }","    };","    ","})();","","","","","// GLOBAL APP CONTROLLER","var controller = (function(budgetCtrl, UICtrl) {","    ","    var setupEventListeners = function() {","        var DOM = UICtrl.getDOMstrings();","        ","        document.querySelector(DOM.inputBtn).addEventListener('click', ctrlAddItem);","","        document.addEventListener('keypress', function(event) {","            if (event.keyCode === 13 || event.which === 13) {","                ctrlAddItem();","            }","        });","        ","        document.querySelector(DOM.container).addEventListener('click', ctrlDeleteItem);","        ","        document.querySelector(DOM.inputType).addEventListener('change', UICtrl.changedType);        ","    };","    ","    ","    var updateBudget = function() {","        ","        // 1. Calculate the budget","        budgetCtrl.calculateBudget();","        ","        // 2. Return the budget","        var budget = budgetCtrl.getBudget();","        ","        // 3. Display the budget on the UI","        UICtrl.displayBudget(budget);","    };","    ","    ","    var updatePercentages = function() {","        ","        // 1. Calculate percentages","        budgetCtrl.calculatePercentages();","        ","        // 2. Read percentages from the budget controller","        var percentages = budgetCtrl.getPercentages();","        ","        // 3. Update the UI with the new percentages","        UICtrl.displayPercentages(percentages);","    };","    ","    ","    var ctrlAddItem = function() {","        var input, newItem;","        ","        // 1. Get the field input data","        input = UICtrl.getInput();        ","        ","        if (input.description !== \"\" && !isNaN(input.value) && input.value > 0) {","            // 2. Add the item to the budget controller","            newItem = budgetCtrl.addItem(input.type, input.description, input.value);","","            // 3. Add the item to the UI","            UICtrl.addListItem(newItem, input.type);","","            // 4. Clear the fields","            UICtrl.clearFields();","","            // 5. Calculate and update budget","            updateBudget();","            ","            // 6. Calculate and update percentages","            updatePercentages();","        }","    };","    ","    ","    var ctrlDeleteItem = function(event) {","        var itemID, splitID, type, ID;","        ","        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;","        ","        if (itemID) {","            ","            //inc-1","            splitID = itemID.split('-');","            type = splitID[0];","            ID = parseInt(splitID[1]);","            ","            // 1. delete the item from the data structure","            budgetCtrl.deleteItem(type, ID);","            ","            // 2. Delete the item from the UI","            UICtrl.deleteListItem(itemID);","            ","            // 3. Update and show the new budget","            updateBudget();","            ","            // 4. Calculate and update percentages","            updatePercentages();","        }","    };","    ","    ","    return {","        init: function() {","            console.log('Application has started.');","            UICtrl.displayMonth();","            UICtrl.displayBudget({","                budget: 0,","                totalInc: 0,","                totalExp: 0,","                percentage: -1","            });","            setupEventListeners();","        }","    };","    ","})(budgetController, UIController);","","","controller.init();",""],"id":1}]]},"ace":{"folds":[],"scrolltop":5785.5556640625,"scrollleft":0,"selection":{"start":{"row":390,"column":0},"end":{"row":397,"column":47},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":279,"state":"start","mode":"ace/mode/text"}},"timestamp":1547611239719}